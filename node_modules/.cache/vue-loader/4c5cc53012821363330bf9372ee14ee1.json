{"remainingRequest":"E:\\Projects\\VueJS\\Practice\\practiceapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Projects\\VueJS\\Practice\\practiceapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Projects\\VueJS\\Practice\\practiceapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Projects\\VueJS\\Practice\\practiceapp\\src\\components\\formfields.vue?vue&type=template&id=4ffbb00d&scoped=true&","dependencies":[{"path":"E:\\Projects\\VueJS\\Practice\\practiceapp\\src\\components\\formfields.vue","mtime":1609827187891},{"path":"E:\\Projects\\VueJS\\Practice\\practiceapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Projects\\VueJS\\Practice\\practiceapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\Projects\\VueJS\\Practice\\practiceapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Projects\\VueJS\\Practice\\practiceapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}